// <auto-generated />
using System;
using Crm.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Crm.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Crm.Data.Kunde", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Anzahlverkäufe")
                        .HasColumnType("int");

                    b.Property<string>("Branche")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GesamtUmsatz")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notiz")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telenummer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unternehmen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Kunden");
                });

            modelBuilder.Entity("Crm.Data.Rechnung", b =>
                {
                    b.Property<int>("RechnungId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RechnungId"));

                    b.Property<DateTime>("ErstellDatum")
                        .HasColumnType("datetime2");

                    b.Property<int>("KundeId")
                        .HasColumnType("int");

                    b.Property<int>("RechnungNr")
                        .HasColumnType("int");

                    b.Property<int>("RechnungsBetrag")
                        .HasColumnType("int");

                    b.HasKey("RechnungId");

                    b.HasIndex("KundeId");

                    b.ToTable("Rechnungen");
                });

            modelBuilder.Entity("Crm.Data.Termin", b =>
                {
                    b.Property<int>("TerminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TerminId"));

                    b.Property<string>("Betreff")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<int>("KundeId")
                        .HasColumnType("int");

                    b.Property<string>("Notiz")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TerminName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TerminId");

                    b.HasIndex("KundeId");

                    b.ToTable("Termine");
                });

            modelBuilder.Entity("Crm.Data.Rechnung", b =>
                {
                    b.HasOne("Crm.Data.Kunde", "Kunde")
                        .WithMany("Rechnungen")
                        .HasForeignKey("KundeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kunde");
                });

            modelBuilder.Entity("Crm.Data.Termin", b =>
                {
                    b.HasOne("Crm.Data.Kunde", "Kunde")
                        .WithMany("Termine")
                        .HasForeignKey("KundeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kunde");
                });

            modelBuilder.Entity("Crm.Data.Kunde", b =>
                {
                    b.Navigation("Rechnungen");

                    b.Navigation("Termine");
                });
#pragma warning restore 612, 618
        }
    }
}
